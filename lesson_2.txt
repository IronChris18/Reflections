Q: What happens when you initialize a repository?
Why do you need to do it?

A: creates a .git file, and I need it to be able to commit... or something

Q: How is the staging area different from the working directory
and the repository?
What value do you think it offers?

A: staging area is a place to get files ready to go to git, but they
aren't actually there yet. working directory is where all the files originate.
It gives us the opportunity to check our commit logic before committing

Q: How can you use the staging area to make sure you have
one commit per logical change?

A: Use git diff without arguments to see differences b/t working
directory and staging area

Q: What are some situations when branches would be helpful
in keeping your history organized? How would branches help?

A: When I want to add experimental features or add-ons.
Branches help because they allow me to go back to a working version
whenever I need

Q: How do the diagrams help you visualize the branch structure?

A: They show what is accessible and what will be lost if I am not careful

Q: What is the result of merging two branches together?
Why do we represent it in the diagram the way we do?

A: The result is a single branch with all changes from both branches
It is represented that way to show that the "tip" of the master branch
has changed

Q: What are the pros and cons of Gitâ€™s automatic merging
vs. always doing merges manually?

A: Pros - Quicker, don't have to "guess" which code is correct
	Cons - It could pick the wrong code, I don't see what changes were made

Q: 